<h1>Pre-submission Checks</h1>
<p>Please confirm the following checks before continuing.</p>

<ul class="list-group mb-4">
  <li class="list-group-item">
    <%= itsaStatus ? '✅' : '❌' %> Registered for Making Tax Digital
  </li>
  <li class="list-group-item">
    <%= propertyRegistered ? '✅' : '❌' %> UK Property Registered
  </li>
</ul>

<h2 class="mb-4">Your HMRC Property Income Obligations</h2>

<!-- Table -->
<table class="table table-bordered table-striped">
  <thead class="table-dark">
    <tr>
      <th>Period Start</th>
      <th>Period End</th>
      <th>Due Date</th>
      <th>Status</th>
    </tr>
  </thead>
  <tbody id="obligationsTableBody"></tbody>
</table>

<!-- Embed obligations data from backend -->
<script>
  const obligationsData = <%- JSON.stringify(obligationsData) %>;
</script>

<!-- Script to render table -->
<script>
  const tbody = document.getElementById('obligationsTableBody');

  obligationsData.obligations.forEach(ob => {
    ob.obligationDetails.forEach(detail => {
      const tr = document.createElement('tr');

      tr.innerHTML = `
        <td>${detail.periodStartDate}</td>
        <td>${detail.periodEndDate}</td>
        <td>${detail.dueDate}</td>
        <td>${detail.status}</td>
      `;

      tbody.appendChild(tr);
    });
  });
</script>

<h3>Upload property income transactions</h3>

<div class="mb-3">
  <label for="csvFile" class="form-label">Upload Transactions CSV</label>
  <input class="form-control" type="file" id="csvFile" accept=".csv">
</div>
<button id="uploadBtn" class="btn btn-primary">Upload CSV</button>

<div id="uploadStatus" class="mt-3"></div>
<div id="csvPreview" class="mt-3"></div>

<script>
function renderTable(data) {
  if (!Array.isArray(data) || data.length === 0) {
    return '<p>No transactions found</p>';
  }

  const headers = Object.keys(data[0]);

  let html = '<table border="1" cellpadding="5"><thead><tr>';
  headers.forEach(h => {
    html += `<th>${h}</th>`;
  });
  html += '</tr></thead><tbody>';

  data.forEach(row => {
    html += '<tr>';
    headers.forEach(h => {
      html += `<td>${row[h]}</td>`;
    });
    html += '</tr>';
  });

  html += '</tbody></table>';
  return html;
}

document.getElementById('uploadBtn').addEventListener('click', async () => {
  const fileInput = document.getElementById('csvFile');
  const file = fileInput.files[0];

  if (!file) {
    document.getElementById('uploadStatus').textContent = 'Please select a file';
    return;
  }

  const formData = new FormData();
  formData.append('csv', file);

  try {
    const res = await fetch('/property-income', {
      method: 'POST',
      body: formData
    });

    if (!res.ok) throw new Error('Upload failed');

    const json = await res.json();

    document.getElementById('uploadStatus').textContent = 'Upload successful!';

    // 👉 Only display the transaction rows, not quarterly totals
    const previewDiv = document.getElementById('csvPreview');
    previewDiv.innerHTML = renderTable(json.data.results);

  } catch (err) {
    document.getElementById('uploadStatus').textContent = 'Error uploading file';
    console.error(err);
  }
});
</script>

